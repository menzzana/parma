Parma

Genes are the building blocks of heredity. They are passed from parent 
to child. They hold DNA, the instructions for making proteins, which in 
turn, produce energy, move molecules from one place to another, build 
structures, break down toxins, and do many other maintenance jobs.
Sometimes there is a mutation, a change in a gene or genes, which changes 
the gene's instructions for making a protein, so the protein does not work 
properly or is missing entirely. This can cause a medical condition called 
a genetic disorder. 
Identifying monogenic diseases, aka a genetic disorder where only one gene 
is involved, is straightforward since you only need to find one locus in 
close proximity to the gene in question where the distribution of the alleles 
differs between sick and healthy individuals.
In polygenic diseases the statistics can be very complex since there can be 
any number of genes involved and not all contributing genes have the same 
impact on the disorder.
In order to discover which combination of loci has the greatest impact on 
a disease, this software analyzes all loci combinations, and to further ascertain that 
the best combination of loci has been found, there is an option to permute the dataset 
a number of times, at the phenotype level, and directly compare the permuted 
results to the results obtained from the non-permuted dataset.
This software performs this analysis by using an algorithm called  
Multi‑Dimensionality Reduction (MDR) developed by Hahn et al.

L. W. Hahn, M. D. Ritchie, J. H. 2003. Multifactor dimensionality reduction software for
detecting gene–gene and gene–environment interactions. Bioinformatics 19:3. 376-382

***

BUILDING (from source bundle)

*** READ THIS CAREFULLY: you MUST install the required libraries! ***

DEPENDENCIES
C++ compiler
cmake => 2.8
MPI library. If not found a serial version of parma will be compiled

In order to build just run...
mkdir [BUILD DIR]
cd [BUILD DIR]
cmake [SOURCE DIR]
make

In case you want to run parma serially, uncomment find_package(MPI)
in CMakeLists.txt

***

FILES

CMakeLists.txt
main.cpp
mdr.cpp/.h
global.cpp/.h
loader.cpp/.h
version_config.h.in

OPTIONS
-s,seed [value]            Set [value] as new seed for random calculations
                           [value] should be a positive integer
-p,permutations [value]    Set [value] as the number of permutations
-f,file [file]             The [file] that should contain the genetic data
-m,markerfile [file]       The [file] containing the markers to be analyzed
                           If not included all markers will be analyzed
                           Markers in this file should be ordered in one marker per line with no header
-a,maxcombinations [value] Max number of marker combinations tested
-i,mincombinations [value] Min number of marker combinations tested
-d,datatype [value]        Input data format
                           [value] 1 Example data format from MDR
                           [value] 2 Schizophrenic Database format
                           [value] 3 Plink BED format
-u,cutoffpvalue [value]    Show only test pvalues below this limit.
                           Without this option only the best combinations will be shown


